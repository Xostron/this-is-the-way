{
  "title": "Продвинутое использование библиотеки React Router v7: как упростить сложную навигацию и улучшить производительность / Хабр",
  "url": "https://habr.com/ru/companies/clevertec/articles/877682/",
  "text": "КАК СТАТЬ АВТОРОМ\nЗарплаты IT-специалистов\nВойти\nМоя лентаВсе потоки\nMrKustoff\n6 фев в 10:40\nПродвинутое использование библиотеки React Router v7: как упростить сложную навигацию и улучшить производительность\nСредний\n9 мин\n8.4K\nБлог компании Clevertec\nJavaScript\n*\nReactJS\n*\nВеб-разработка\n*\nTypeScript\n*\nТуториал\n\nРад приветствовать вас, друзья. Я Сергей, фронтенд-разработчик в Clevertec и хочу поделиться с вами опытом использования последней обновленной 7-й версии React Router в одном из крупных проектов нашей компании.\n\nВ процессе разработки мы часто сталкиваемся с проблемами навигации в больших React-приложениях: сложной логикой авторизации, множеством вложенных страниц и подстраниц, необходимостью проверок или отправкой данных при переходе на определенную страницу. React Router v7 предлагает элегантные решения этих проблем при правильном использовании.\n\nВ этой статье я расскажу, как мы реорганизовали структуру роутинга, используя возможности этой библиотеки:\n\nизбавились от лишних «букав кода»\n\nулучшили производительность приложения\n\nсоздали легко масштабируемую, более понятную и читаемую для разработчиков навигацию по страницам\n\nсоздали полезные хелперы, которые вместо «кастомных хуков» теперь используются внутри самой системы постраничной навигации в рамках SPA-приложения.\n\nПоказываю на примере\n\nДля статьи я подготовил небольшой пример, который в схожем виде нашел отражение в одном из проектов нашей компании. Дизайн минималистичный и создан для демки) Исходный код в свободном доступе лежит на моем гитхаб-аккаунте.\n\nДля начала сделаем минимальную преднастройку с использованием prettier, eslint, typescript, react, react-router (в 7-й версии нам больше не нужен \"react-router-dom\", пакеты были упрощены до библиотеки \"react-router\"). Также следует учесть, что необходимо наличие на проекте NodeJS не ниже 20-й, пакетов react и react-dom версий не ниже 18-й.\n\nВ исходном приложении имеются несколько стартовых страниц, которые представляют собой степ-страницы.\n\nСтраница приветствия (http://localhost:3000/steps/greeting)  \n\nСтраница приветствия содержит кнопки перехода к степу входа в приложение (вход требует дополнительных проверок, причем совершенно любых), и входа через сторонний сервис (предположим, google. Для статьи не имеет значения, поэтому сделаем эту кнопку «disabled»).\n\nПри нажатии на вход через предустановленное расширение (предположим, у нас есть некий browser extension), мы переходим на страницу входа в приложение через расширение. При нажатии на кнопку перехода к таблицам переходим на основную страницу приложения с функционалом, который требует предустановленного и включенного расширения. Также есть возможность возврата на страницу приветствия (первый степ).\n\nСтраница входа через расширение (http://localhost:3000/steps/start)  \n\nВ момент перехода или при ручном переходе по роуту основной страницы у нас должна произойти проверка наличия и включенного состояния расширения.\n\nИ финальный степ приложения, который имитирует основную страницу.\n\nФинальная страница (http://localhost:3000/steps/final)\n\nВ случае, если результат проверки неуспешен, происходит редирект на страницу, предлагающую установить или включить расширение. В данном случае переход на финальную страницу будет невозможен.\n\nУстановите расширение\n http://localhost:3000/steps/extension-not-installed  \n\nОтмечу особенности наших страниц: \n\nсхожий дизайн всех степов\n\nесть явные общие блоки\n\nдля всех страниц, кроме приветствия и входа через расширение необходима проверка наличия и включенного состояния расширения (доступность конкретной страницы, переход от странице к странице зависит от результатов проверки).\n\nКак же реализовать такую задачу?\n\nСделать отдельно страницу для каждого степа, использовать стейт менеджер или динамические параметры в роутах, плюс знакомые всем «кастомные хуки»… Или есть вариант попроще.\n\nИспользуем возможности реакт-роутера\n1) создадим роутер и подключим его в приложение, используя RouterProvider (в новой 7-й версии импортируется несколько иначе, чем в предыдущих)\n\nimport { RouterProvider } from 'react-router/dom';\nimport classes from './app.module.css';\nimport { AppRouter } from './app-router';\n\nexport const App = () => {\n    return (\n        <main className={classes.content}>\n            <RouterProvider router={AppRouter} />\n        </main>\n    );\n};\n\nИ непосредственно сам роутер\n\nimport { createBrowserRouter } from 'react-router';\n\nimport { notFound } from './routes/not-found';\nimport { startPage } from './routes/start-page';\nimport { anyRoute } from './routes/any-route';\n\nexport const AppRouter = createBrowserRouter([startPage, notFound, anyRoute]);\n\nПри использовании подхода через createBrowserRouter или createHashRouter каждый роут представляется в отдельном виде. Заодно можем использовать подход организации роутера в отдельной папке и каждый роут поместить в отдельную подпапку с уровнем вложенности, соответствующей нашей структуре страниц:\n\nОчень напоминает app-router из nextjs, не так ли? Теперь станет проще ориентироваться в структуре страниц, совсем как в древовидной структуре папок файлового менеджера.\n\nКаждый роут представляет собой следующие структуры.\n\nСтраница 404:\n\nimport { type RouteObject } from 'react-router';\n\nimport { ROUTES } from '~constants/routes';\nimport { NotFoundPage } from '~pages/not-found-page';\n\nexport const notFound: RouteObject = {\n    path: ROUTES.notFound,\n    element: <NotFoundPage />,\n};\n\nРедирект на 404-ю страницу при несуществующем роуте:\n\nimport { Navigate, RouteObject } from 'react-router-dom';\n\nimport { ROUTES } from '~constants/routes';\n\nexport const anyRoute: RouteObject = {\n    path: ROUTES.anyRoute,\n    element: <Navigate to={ROUTES.notFound} replace={true} />,\n};\n\nОсновная страница приложения:\n\nimport { Navigate, type RouteObject } from 'react-router';\nimport { BaseLayout } from '~components/base-layout';\n\nimport { ROUTES } from '~constants/routes';\nimport { PageSteps } from '~types/page-steps';\nimport { stepsRoot } from './steps-root';\n\nexport const startPage: RouteObject = {\n    path: ROUTES.mainPage,\n    element: <BaseLayout />,\n    children: [\n        {\n            index: true,\n            element: <Navigate to={`${ROUTES.stepsRootPage}/${PageSteps.Greeting}`} />,\n        },\n        stepsRoot,\n    ],\n};\n\nНа примере основной страницы приложения видно, как через children можно создавать вложенные роуты, которые являются не чем иным, как вложенными веб-страницами (тут же вспоминаем про динамические роуты и хук useParams).\n\nТеперь коснемся глубже роута степ-страниц:\n\nimport { Navigate, type RouteObject } from 'react-router';\n\nimport { ROUTES } from '~constants/routes';\nimport { LazyStartPage } from '~pages/lazy-start-page';\n\nimport { MainPagesLayout } from '~components/main-pages-layout';\nimport { loaderCheckExtension } from '../../../utils/loader-check-extension';\nimport { PageSteps } from '~types/page-steps';\n\nexport const stepsRoot: RouteObject = {\n    path: ROUTES.stepsRootPage,\n    element: <MainPagesLayout />,\n    children: [\n        {\n            index: true,\n            element: <Navigate to={`${ROUTES.stepsRootPage}/${PageSteps.Greeting}`} />,\n        },\n        {\n            path: ROUTES.stepPage,\n            element: <LazyStartPage />,\n            loader: loaderCheckExtension,\n        },\n    ],\n};\n\nВот здесь начинается самое интересное – подход создания роутера через createBrowserRouter позволяет использовать loader – это любая функция (проверка, ютилка, хелпер), которая будет выполнятся при переходе на выбранный роут, не производя рендер самой страницы без результатов проверки.\n\nЗаглянем глубже в реализацию имитации типовой проверки, например, наличия расширения в браузере.\n\nimport { type Params } from 'react-router';\n\nimport { STEP_PARAMS_NAME } from '~constants/routes';\nimport { PageSteps } from '~types/page-steps';\n\nconst LOADER_VISIBLE_DURATION_MS = 3000;\n\n// flag для проверки успешности проверки - можно поэкспериментировать и поменять\nconst PROMISE_RESOLVED: boolean = false;\n\n// для кеширования результата проверки\nconst cache: { isAlreadyChecked?: boolean } = {};\n\n// здесь может быть любая асинхронная проверка\nconst customCheck = () =>\n    new Promise<boolean>((resolve) => {\n        if (cache.isAlreadyChecked !== undefined) {\n            resolve(cache.isAlreadyChecked);\n        } else {\n            setTimeout(() => {\n                cache.isAlreadyChecked = PROMISE_RESOLVED;\n                resolve(PROMISE_RESOLVED);\n            }, LOADER_VISIBLE_DURATION_MS);\n        }\n    });\n\n/*\n    Функция-лоадер может принимать аргументы следующего типа:\n        type LoaderFunctionArgs<Context> = {\n            context?: Context;\n            params: Params<string>;\n            request: Request;\n        }\n*/\n\nexport const loaderCheckExtension = ({ params }:\n    { params: Params<typeof STEP_PARAMS_NAME> }) => {\n    const currentStep = params.paramName;\n\n    // пропускаем проверку для определенных страниц \n  - у нас это первая и вторая страницы - не требуют проверки наличия расширения\n    if (currentStep === PageSteps.Start || currentStep === PageSteps.Greeting) {\n        return { hasExtension: true };\n    }\n\n    /* возвращаем промис - причем без await - чтобы в дальнейшем использовать\n       Suspense и fallback, если здесь использовать await - то перехода по роуту\n       не случится до завершения await (в версии реакт-роутер-дом до 7 - нужно\n       было использовать\n       defer({returnedObject})) для получения аналогичного эффекта\n    */\n    const hasExtension = customCheck();\n\n    return { hasExtension };\n};\n\n\nВот в этих строках кода и скрыта некоторая магия. Мы не проверяем роуты степ-страниц для приветствия и стартовой страницы (путем прямого resolve Promise), а на всех остальных страницах мы делаем данную проверку. И не важно, каким образом мы оказались на данном роуте: по клику на кнопку, или редиректом, или вводом напрямую в адресной строке.\n\nСоздадим искусственно Promise, имитирующий проверку. На вход loader может принимать params – те самые, которые мы потом сможем получить в useParams внутри реакт-компонента. Таким образом мы сможем точно понять, на какую страницу собираемся перейти.\n\nДля того, чтобы получить улучшенный UX для страницы, пока работает асинхронная проверка, мы должны вернуть из лоадера Promise, причем без использования await, чтобы можно было использовать Suspense компонент из React.\n\n\n\nИспользуем полученные результаты\n\nВсе тоже очень просто:\n\nimport { Suspense } from 'react';\nimport { Await, useLoaderData, useParams } from 'react-router';\n\nimport { CustomSpinner } from '~components/custom-spinner';\nimport { EntryLoaderData, StepParams } from '~types/router';\nimport { MainPage } from '~pages/main-page';\nimport { PageSteps } from '~types/page-steps';\n\nconst EXTENSION_CHECKED_TEXT = 'Идет процесс проверки ...';\n\nexport const LazyStartPage = () => {\n    const data = useLoaderData() as EntryLoaderData;\n    const { paramName } = useParams<StepParams>();\n\n    /*\n        те шаги, которые не требуют проверки, выносим за Await \n- иначе мы можем не получить fallback при переходе с изначальных страниц на финальную \nпри данной кастомной реализации лоадера\n    */\n    if (paramName === PageSteps.Start || paramName === PageSteps.Greeting) {\n        return <MainPage hasExtension={true} />;\n    }\n\n    return (\n        <Suspense fallback={<CustomSpinner tip={EXTENSION_CHECKED_TEXT} />}>\n            <Await \n              resolve={data.hasExtension}\n              errorElement={<div>Error during render page!</div>}>\n                {(props: boolean) => <MainPage hasExtension={props} />}\n            </Await>\n        </Suspense>\n    );\n};\n\nЗдесь нам на помощь приходят Suspense, а также Await и useLoaderData из реакт-роутера.\n\nЭтот пример кода позволяет создать LazyPage (ленивую страницу). При каждой проверке расширения будет отображаться fallback-компонент в виде кастомного спиннера (в нашем случае) или любого другого переданного вместо спиннера компонента. Fallback-компонент будет отображаться до тех пор, пока не завершится проверка.\n\nКомпонент Await в качестве пропса передает своим children как раз тот параметр, который мы получили при отработке лоадера – через пропс resolve.\n\nНу а сами данные получаем из хука useLoaderData, также предоставляемого react-router. Минималистично и просто – не правда ли?)\n\nДалее отрисовываем необходимые нам страницы, например MainPage. Заодно здесь реализуем логику защиты доступа к страницам, без положительных результатов проверки на наличие расширения (своеобразный ProtectedRoute).\n\nimport { FC } from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport { ROUTES } from '~constants/routes';\nimport { PageSteps } from '~types/page-steps';\nimport { StepParams } from '~types/router';\nimport { EnterPage } from '~pages/enter-page';\n\ntype MainPageProps = {\n    hasExtension: boolean;\n};\n\nexport const MainPage: FC<MainPageProps> = ({ hasExtension }) => {\n    const { paramName } = useParams<StepParams>();\n\n    if (!hasExtension && paramName === PageSteps.Final) {\n        return <Navigate \n          to={`${ROUTES.stepsRootPage}/${PageSteps.ExtensionNotInstalled}`} />;\n    }\n\n    return <EnterPage />;\n};\n\nВся дальнейшая реализация не является целью данной статьи и представляет собой известные подходы реакт – стандартные реакт-компоненты, использование хука useParams для получения текущего степа. Более детально можно посмотреть в исходном коде примера.\n\n\nХочу отметить, что весь дополнительный функционал: useLoaderData, Await, сами лоадеры и многое другое доступны только при создании роутинга через сreateBrowserRouter или createHashRouter библиотеки «react-router».\n\nЕсть хорошие новости для разработчиков, использующих фреймворк Remix. Логика роутинга Remix как раз и реализована в библиотеке 7-й версии реакт роутера. Отмечу также, что 7-я версия привнесла возможность использования react-router уже как фреймворка, а не только библиотеки, что заслуживает написания отдельной статьи.\n\nЧего на деле удалось достигнуть в реальном проекте при использовании библиотеки react-router v7:\n\n1. Создана читаемая структура роутинга наподобие nextjs – древовидная, как у файлового менеджера.\n\n2. Логика проверки расширения вынесена в компактный компонент, который в зависимости от динамического степа делает проверку до момента рендера страниц.\n\n3. Сочетание Suspense из react; useLoaderData, Await и defer из react-router-dom позволило не использовать стейт-менеджеры и контексты для отображения различных лоадеров,  добиться снижения количества перерендеров компоненты. Код стал более компактный, читаемый и масштабируемый.\n\n4. Код компоненты входной страницы (аналог той самой EntryPage) сократился в 5 раз при соответствующем рефакторинге.\n\nБуду рад, если опыт использования react-router с расширенной функциональностью поможет и вам. Вопросы в комментах приветствуются. Happy coding!\n\nТеги:\njavascript\nвеб-приложения\nweb-разработка\nreact\nsingle page application\nreact-router\nХабы:Блог компании ClevertecJavaScriptReactJSВеб-разработкаTypeScript\n+6\n28\n8\n+8\nРедакторский дайджест\n\nПрисылаем лучшие статьи раз в месяц\n\nОставляя свою почту, я принимаю Политику конфиденциальности и даю согласие на получение рассылок\nClevertec\nЦифровые решения для бизнеса | финтех, логистика\nСайт\n4\nКарма\n0\nРейтинг\nSergei @MrKustoff\n\nПользователь\n\nПодписаться\nКомментарии 8\nПубликации\nЛУЧШИЕ ЗА СУТКИ\nПОХОЖИЕ\nAndreyDmitriev\n20 часов назад\nНе смотрите на % использования процессора при гиперпоточности\nСредний\n19 мин\n5.6K\nОбзор\n+86\n68\n39\n+39\nyard\n4 часа назад\nМТС: нам плевать на вашу тайну связи?\n2 мин\n8.4K\nМнение\n+68\n20\n51\n+51\nSantrY\n3 часа назад\nКак ФБР запустило стартап для наркокартелей и три года читало их переписку — история Anom\n22 мин\n2.3K\n+32\n11\n6\n+6\nwasdd\n23 часа назад\nРазворачиваем онлайн-игру на виртуальном сервере\nПростой\n4 мин\n2.6K\nТуториал\n+26\n25\n0\newolf\n21 час назад\nif err != nil: почему мы (не) любим обработку ошибок в Go? Обзор предложений по её улучшению\nПростой\n27 мин\n4.3K\nРетроспектива\n+23\n26\n29\n+29\nsergey_ist\n22 часа назад\nInfrastructure as Code на практике: как мы рефакторили сложный Ansible-репозиторий\nСредний\n9 мин\n2.4K\n+20\n38\n6\n+6\nshiru8bit\n3 часа назад\nЗвуковые эффекты на ZX Spectrum: AYFXEdit и BeepFX\nПростой\n17 мин\n581\nОбзор\n+17\n6\n2\n+2\nPatientZero\n22 часа назад\nНеожиданный скачок продуктивности благодаря Rust\nСредний\n6 мин\n4.3K\nПеревод\n+17\n25\n30\n+30\nangela_abd\n5 часов назад\nРецепт стали — теория и практика\n16 мин\n1.2K\n+16\n8\n3\n+3\nMusscatt\n21 час назад\nНе промптом единым: как миксовать нейросети и ручную работу\nСредний\n4 мин\n1.9K\nТуториал\n+16\n21\n3\n+3\nКомикс, в котором есть: герои, приключение и IT\nIT-комикс\nПоказать еще\nИСТОРИИ\nMade in AI\nЧего хотят лиды в бигтехе?\nВ поисках пятого элемента ИТ\nЗакрыть вкладки — открыть окно\nКак расти в ИТ: советы, гайды и опыт сеньоров\nКурсы со скидками до 60%\nВОПРОСЫ И ОТВЕТЫ\nНе могу передать POST запрос ajax/js почему?\nAJAXПростой2 ответа\nКак в JavaScript достать ВСЕ поля ключ-значения из cookie для сайта?\nJavaScriptПростой1 ответ\nПочему не работает прокси в Axios на Electon JS (в файле preload.js)?\nJavaScriptПростой0 ответов\nОтправка формы html?\nJavaScriptПростой1 ответ\nКак исправить ощибку Uncaught TypeError: $.getJSON(...).success is not a function?\nJavaScriptПростой1 ответ\nБольше вопросов на Хабр Q&A\nМИНУТОЧКУ ВНИМАНИЯ\nСобытие\nПосмотри в Календарь, вдруг сегодня есть мероприятие?\nПромо \nНеважно, что ты выберешь — с Промокодусом будет дешевле\nТурбо\nЛего-мир / аниме / киберпанк за окном? Почему бы и нет?\nРЕКЛАМА\n\nООО Хабр\n\nИНН 7705756279\n\nerid: 2VSb5yZbMbo\n\nФакультет киберспорта\nЧто изучают в современном вузе\nНастройка языка\nТехническая поддержка\n© 2006–2025, Habr",
  "links": [
    "https://habr.com/ru/",
    "https://habr.com/ru/sandbox/start/",
    "https://effect.habr.com/a/D5xajHSMolIYlEvpRXryuHA0Dzbb0DpZn_SamY5z-u8Sw5C4aHI6pNl1yc1BMj1gxhqeSWv8D-RmTeDRQ0gHiRXX2dxZQSCEVSODIryuZ-FlBWbHreGYlNoRg6MfC4j_tCcLob8g2Z_J",
    "https://habr.com/ru/search/",
    "https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/clevertec/articles/877682/&hl=ru",
    "https://habr.com/ru/feed/",
    "https://habr.com/ru/articles/",
    "https://habr.com/ru/users/MrKustoff/",
    "https://habr.com/ru/users/MrKustoff/",
    "https://habr.com/ru/companies/clevertec/articles/",
    "https://habr.com/ru/hubs/javascript/",
    "https://habr.com/ru/hubs/reactjs/",
    "https://habr.com/ru/hubs/webdev/",
    "https://habr.com/ru/hubs/typescript/",
    "https://clevertec.ru/",
    "https://github.com/SergikEnergy/habr-react-router-demo",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[javascript]",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[%D0%B2%D0%B5%D0%B1-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F]",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[web-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0]",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[react]",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[single+page+application]",
    "https://habr.com/ru/search/?target_type=posts&order=relevance&q=[react-router]",
    "https://habr.com/ru/companies/clevertec/articles/",
    "https://habr.com/ru/hubs/javascript/",
    "https://habr.com/ru/hubs/reactjs/",
    "https://habr.com/ru/hubs/webdev/",
    "https://habr.com/ru/hubs/typescript/",
    "https://habr.com/ru/companies/clevertec/articles/877682/comments/",
    "https://habr.com/ru/companies/clevertec/articles/877682/comments/",
    "https://account.habr.com/ru/info/confidential",
    "https://habr.com/ru/companies/clevertec/profile/",
    "https://habr.com/ru/companies/clevertec/profile/",
    "https://clevertec.ru/",
    "https://habr.com/ru/users/MrKustoff/",
    "https://habr.com/ru/users/MrKustoff/",
    "https://habr.com/ru/companies/clevertec/articles/877682/comments/",
    "https://habr.com/ru/users/AndreyDmitriev/",
    "https://habr.com/ru/users/AndreyDmitriev/",
    "https://habr.com/ru/articles/945076/",
    "https://habr.com/ru/articles/945076/comments/",
    "https://habr.com/ru/articles/945076/comments/",
    "https://habr.com/ru/users/yard/",
    "https://habr.com/ru/users/yard/",
    "https://habr.com/ru/articles/945220/",
    "https://habr.com/ru/articles/945220/comments/",
    "https://habr.com/ru/articles/945220/comments/",
    "https://habr.com/ru/users/SantrY/",
    "https://habr.com/ru/users/SantrY/",
    "https://habr.com/ru/companies/bastion/articles/937916/",
    "https://habr.com/ru/companies/bastion/articles/937916/comments/",
    "https://habr.com/ru/companies/bastion/articles/937916/comments/",
    "https://habr.com/ru/users/wasdd/",
    "https://habr.com/ru/users/wasdd/",
    "https://habr.com/ru/companies/ruvds/articles/935014/",
    "https://habr.com/ru/companies/ruvds/articles/935014/comments/",
    "https://habr.com/ru/users/ewolf/",
    "https://habr.com/ru/users/ewolf/",
    "https://habr.com/ru/companies/avito/articles/944824/",
    "https://habr.com/ru/companies/avito/articles/944824/comments/",
    "https://habr.com/ru/companies/avito/articles/944824/comments/",
    "https://habr.com/ru/users/sergey_ist/",
    "https://habr.com/ru/users/sergey_ist/",
    "https://habr.com/ru/companies/kts/articles/945016/",
    "https://habr.com/ru/companies/kts/articles/945016/comments/",
    "https://habr.com/ru/companies/kts/articles/945016/comments/",
    "https://habr.com/ru/users/shiru8bit/",
    "https://habr.com/ru/users/shiru8bit/",
    "https://habr.com/ru/companies/ruvds/articles/943960/",
    "https://habr.com/ru/companies/ruvds/articles/943960/comments/",
    "https://habr.com/ru/companies/ruvds/articles/943960/comments/",
    "https://habr.com/ru/users/PatientZero/",
    "https://habr.com/ru/users/PatientZero/",
    "https://habr.com/ru/articles/944706/",
    "https://habr.com/ru/articles/944706/comments/",
    "https://habr.com/ru/articles/944706/comments/",
    "https://habr.com/ru/users/angela_abd/",
    "https://habr.com/ru/users/angela_abd/",
    "https://habr.com/ru/companies/nlmk/articles/932214/",
    "https://habr.com/ru/companies/nlmk/articles/932214/comments/",
    "https://habr.com/ru/companies/nlmk/articles/932214/comments/",
    "https://habr.com/ru/users/Musscatt/",
    "https://habr.com/ru/users/Musscatt/",
    "https://habr.com/ru/articles/945068/",
    "https://habr.com/ru/articles/945068/comments/",
    "https://habr.com/ru/articles/945068/comments/",
    "https://effect.habr.com/a/TZI_UiJHphqopQ40Mdwb4jLutCC8kdoH397xhcOuoyGvdyv08-oaYFYZStRDWYteDlI4EKkVtBpK8pqgN5xQ06gLnwbwanpvsEBzwbRU8qEgFxkPQPcyTGTSIFCODMHTHfnHvsqgGELs",
    "https://effect.habr.com/a/ZSs0XOau8fu0-S3-KKE_uQJ1jj6eCzJ_2lwKTgQ2-_Y_GMRodXoqAZ-Fz8bjJ2L8nboLMfkXLU1Tnv4XadOC4OlonLHE83gkPSWwL6VT-hGWPYM2lWz0c283n6ip1b5y2GpJ2TGigoNYXpk8MQ",
    "https://effect.habr.com/a/fJFG2eMVap6rv59MfyRmZK7zXHSrhdzqABNst-TEtN6p992LmytkEgCHNcWc2Fh6BsufPnbejoxh0jFIyMa9OR0oJGCbtLBlfjkits7gjYA9ewzJsm6jAiKkX-o",
    "https://effect.habr.com/a/ZyXKRt7tpBhbwZKriDBEU8Wn2Gytp1kzrbiczliyKmCOSgu9CDQHiUGOMZIwkiyOsRQazSTt2PQb_YAhlttc06DU5wyx_Domwf0sCpSdKR95R_oIOafN4V1nuPJvTd3AnnSTLb1vYwEFwHqQ7EtHh1I",
    "https://qna.habr.com/questions?utm_campaign=questions_postlist&utm_content=questions&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/q/1403164?utm_campaign=questions_postlist&utm_content=question&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/q/1403074?utm_campaign=questions_postlist&utm_content=question&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/q/1403036?utm_campaign=questions_postlist&utm_content=question&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/q/1403010?utm_campaign=questions_postlist&utm_content=question&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/q/1402808?utm_campaign=questions_postlist&utm_content=question&utm_medium=habr_block&utm_source=habr_mob",
    "https://qna.habr.com/questions?utm_campaign=questions_postlist&utm_content=questions_all&utm_medium=habr_block&utm_source=habr_mob",
    "https://effect.habr.com/a/pZwmoZYm16L-8PkiO22K7WY0mGTXN9gp0hwCzogU-fVMfMg1GpqZzcy-EMPlYVpZh2B9c2l1gUdRJwBA0iQ64wPxDejuR2wx51x14ITzxZ0Xj5WOnspCChN7Ce24p_vV",
    "https://effect.habr.com/a/CcaRb8GVh9Wh7Fdz2HlfNZ4bdzwHfHwxEh5QEy1s5R6np8bxklkCrC93rbfAfE5RU_BZTQF56gq2dZVVR4BghEUqtePmsrzrV7vZ1JGS6takbmZ1KH2-dMzytXQ",
    "https://effect.habr.com/a/q-pJ5ilX2AhJ8jODqz-8SvCYiYASvLvAKQVrzLTPcHrg4Jb7US-3ihqSHMnQSFNIFvBWSB4uaDnXbpKKsvO99EBOy51SkHPBKBTt74rtN59Rw9jZjyLDG1t9vV2aNf2W46lPgZL7Ut9EFw",
    "https://effect.habr.com/a/XuGmnq8C2jtY3nYc-XyGQRlkBCV3rdIqJ9sO3K_o-D_l4MsUOLHJHrhQFfiSIc8gTAZ2qbZ3su9uSX6rdJOOLacyUWiZRwaJ3rfFjhqvlqG0NsQE-aiZifVJHhbhCAS2M5oRgYfaFLh4",
    "https://habr.com/ru/",
    "https://vk.com/habr",
    "https://telegram.me/habr_com",
    "http://www.youtube.com/@Habr_com",
    "https://dzen.ru/habr",
    "https://habr.com/ru/feedback/",
    "https://company.habr.com/"
  ],
  "images": [
    "https://effect.habr.com/a/8Xg9nhH2fDujCoilPnILapPLpLxHtsNgqILeuSqZa5LcnofZ5sjvJc19WAJlsrjZjNALRrzlqZAFD5c5ukItIFWfGVAuN7MjtrS9cJxL5Cn3G78veKWRy8X7pcZ2Kx1kZWBswMPEjhZgCEjj8GzNIiNoKX-SipIrnSLAaOfSk_IErfLxw4hSo-s8WZB_tgv9X40pbwp65CEvdRaTlmM6FZcWgQ",
    "https://assets.habr.com/habr-web/img/avatars/130.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/a4e/b9a/462/a4eb9a46284f750cdffa6ef7e86317e5.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/6ac/317/c49/6ac317c494e24b0af382f1b3cd9e7097.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/a68/cdc/83b/a68cdc83b622f39a3ee1919eb992ff18.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/098/8b6/5c6/0988b65c6a046e444713a5a47cc12963.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/759/d36/f37/759d36f372c59839050f3e068e4adb0d.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/f67/c28/1f7/f67c281f7eee3aa06b6d15ec5cce2066.png",
    "https://habrastorage.org/r/w1560/getpro/habr/upload_files/789/78b/870/78978b870c49b9aa0b7958d5fef4b4e0.png",
    "https://habrastorage.org/getpro/habr/company/e3b/0fb/21a/e3b0fb21ad242c05ab29ff2f936fdb5e.png",
    "https://assets.habr.com/habr-web/img/avatars/130.png",
    "https://habrastorage.org/r/w64/getpro/habr/avatars/bd8/578/c22/bd8578c227d3536a285d9752c14026f3.png",
    "https://assets.habr.com/habr-web/img/avatars/033.png",
    "https://habrastorage.org/r/w64/getpro/habr/avatars/217/882/6e2/2178826e240dfe91b42df7bd05dc3b07.jpg",
    "https://assets.habr.com/habr-web/img/avatars/132.png",
    "https://habrastorage.org/r/w64/getpro/habr/avatars/4c9/3da/2ed/4c93da2edb71072b412f00cbf40e9941.png",
    "https://habrastorage.org/r/w64/getpro/habr/avatars/05e/d0d/8d9/05ed0d8d9fb77e3b2efd2caff42ec049.jpg",
    "https://habrastorage.org/getpro/habr/avatars/b8d/bc5/9f1/b8dbc59f16b034a5b569c4da62345d08.gif",
    "https://habrastorage.org/r/w64/getpro/habr/avatars/8de/9c5/34a/8de9c534a18a6cb8693270a2b528d4c0.png",
    "https://assets.habr.com/habr-web/img/avatars/007.png",
    "https://assets.habr.com/habr-web/img/avatars/053.png",
    "https://habrastorage.org/r/w390/getpro/effect/349/4f9/5e1/b51/dd4/07add12142c508d71cc053f99/-_0_1.jpg",
    "https://habrastorage.org/getpro/effect/9fd/412/122/2db/450/fde9cf622e997019533ae6fb7/habr.png",
    "https://habrastorage.org/r/w390/getpro/effect/473/169/41f/df2/28a/20d5f07d4bac0e8d31affeba7/1.png",
    "https://habrastorage.org/getpro/effect/583/e70/a3c/55f/503/73df8f01d21168c913c55eef8/Frame104.png",
    "https://habrastorage.org/r/w390/getpro/effect/d89/b63/4d2/45a/d16/7a790cc48d93a6c0f47c11e1d/1.png",
    "https://habrastorage.org/getpro/effect/10d/f52/a10/642/21d/d4f77f45ee612a669b2c1f84d/2132528a7589625329ce040668339a57.png",
    "https://habrastorage.org/r/w390/getpro/effect/928/505/637/15b/068/033d53d75d78110807d4529d2/1.jpg",
    "https://habrastorage.org/getpro/effect/e8c/cf3/a8a/875/b1d/732c65059aed0fb5e6102dd13/Frame2147223134.png",
    "https://habrastorage.org/r/w390/getpro/effect/aa1/897/ab9/29c/746/d0883048f4020870972109c9a/1.jpg",
    "https://habrastorage.org/getpro/effect/9fd/412/122/2db/450/fde9cf622e997019533ae6fb7/habr.png",
    "https://habrastorage.org/r/w390/getpro/effect/298/c72/8ca/097/281/0882deb1471fedab029d7fbce/1.png",
    "https://habrastorage.org/getpro/effect/bc1/313/294/6ac/395/bf102afd7fd8461c5868ebc3f/.png",
    "https://effect.habr.com/a/GUxbCBddYMXc8qCVY6ugo79QwzHCnAvqpR81VsHk2laCNYMEEtDejjV7x5mhzOpfBP_CqNnX0Vp1-NGrRm1XyJAyGtegJoCP7sMhZNC8-Bnf9mWkdvMU78eWpyo9k6_PwjMJuaVMC8a1_925mTazWwHRV55r4FxO2Cl7uQ5wFmyyymjB9Iik5oypEYQep37R5r9xrmmfGYolDpDZjOjhtmfbwy3rFEd04WuLip5Vk_mL",
    "https://effect.habr.com/a/Oq2Ejn23Ahxj9RGtMrrvHQFXh4-pjY8phEyGYQXSx3OwwLa9IITkRhDO22MzeMv0JLqVH0r96q7pWrUZByzG4EnPHR0hpSfp67ik5KEQvXW-xJGD5bn3Z9v4Apd_T73xrTOg4WwyJOiQ2N6fblQhcy-6zchsNs0smqNBE7aVGQi6VAvtGi5Bb8yr2U5fWg24w6lFLAbmSLG_9E_RGGaPsg",
    "https://effect.habr.com/a/wj1CAuPzIGDF3OX3Z7M2p7walIG3X0vzcmRmr-mJjnZYyfX1n-0CvmXjcmf0t7kiygU1kk7OvTiAoeylioNoaYt2810-OtszJfFGHH9-bPI_Cjrtm_s7bqE98yvDb0lwRpfhX3iCk_748SCcX_IuzpvI-9Anc5vqDXzYJt93bDsnvuYRYx-hn8z9M7NBuFeG81X2u_oOYbI0eSPDtO5y",
    "https://effect.habr.com/a/NqEgoT5FTETW9KKm3d5tUZZ36Og2FWBmecRGvka2WIkx50KL8olU3b4xHuoftPCBaCXusS-dLDYMkhdoTOwGggAkSgHEEGkE1G0aVsF4RQtGVNDW7e6-O_ZjmwqrQ6_7KXNSiOmmOx0D6_nAML6mplWhSJSbMAnsPSlTOAPCjkujDlzVyASxdsKBWGKY6U4VGBl6l_CT-_d5OG0K_vybwI-ToQ"
  ]
}